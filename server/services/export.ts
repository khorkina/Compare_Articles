import { Document, Packer, Paragraph, TextRun, HeadingLevel } from 'docx';

export class ExportService {
  async generateDocx(comparisonData: {
    articleTitle: string;
    languages: string[];
    outputLanguage: string;
    content: string;
    isFunnyMode: boolean;
  }): Promise<Buffer> {
    try {
      const doc = new Document({
        sections: [{
          properties: {},
          children: [
            new Paragraph({
              text: `Wiki Truth Comparison Report`,
              heading: HeadingLevel.TITLE,
            }),
            new Paragraph({
              children: [
                new TextRun({
                  text: `Article: `,
                  bold: true,
                }),
                new TextRun({
                  text: comparisonData.articleTitle,
                }),
              ],
            }),
            new Paragraph({
              children: [
                new TextRun({
                  text: `Languages Compared: `,
                  bold: true,
                }),
                new TextRun({
                  text: comparisonData.languages.join(', '),
                }),
              ],
            }),
            new Paragraph({
              children: [
                new TextRun({
                  text: `Output Language: `,
                  bold: true,
                }),
                new TextRun({
                  text: comparisonData.outputLanguage,
                }),
              ],
            }),
            new Paragraph({
              children: [
                new TextRun({
                  text: `Mode: `,
                  bold: true,
                }),
                new TextRun({
                  text: comparisonData.isFunnyMode ? 'Funny Mode' : 'Standard Analysis',
                }),
              ],
            }),
            new Paragraph({
              text: '', // Empty line
            }),
            new Paragraph({
              text: 'Comparison Analysis',
              heading: HeadingLevel.HEADING_1,
            }),
            ...this.convertTextToParagraphs(comparisonData.content),
            new Paragraph({
              text: '', // Empty line
            }),
            new Paragraph({
              children: [
                new TextRun({
                  text: `Generated by Wiki Truth on ${new Date().toLocaleDateString()}`,
                  italics: true,
                  size: 20,
                }),
              ],
            }),
          ],
        }],
      });

      return await Packer.toBuffer(doc);
    } catch (error) {
      console.error('DOCX generation error:', error);
      throw new Error('Failed to generate DOCX document');
    }
  }

  private convertTextToParagraphs(text: string): Paragraph[] {
    const lines = text.split('\n');
    return lines.map(line => new Paragraph({
      children: [
        new TextRun({
          text: line.trim(),
        }),
      ],
    }));
  }
}

export const exportService = new ExportService();
